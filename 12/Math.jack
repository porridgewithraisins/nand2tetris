class Math{
	static Array twoPower;

	function void init(){
		var int idx, number;
		
		let twoPower = Array.new(16);

		let idx = 0;
		let number = 1;

		while (idx < 16){
			let twoPower[idx] = number;
			let number = number + number;
			let idx = idx + 1;
		}

		return;
	}

	function int abs(int x){
		if(x < 0){
			return -x;
		} else {
			return x;
		}
	}

	function int multiply(int x, int y){
		var int result, mask, index;

		let mask = 1;
		while (index < 16){
			if (y & mask){
				let result = result + x;
			}
			let index = index + 1;
			let x = x + x;
			let mask = mask + mask;
		}

		return result;
	}

	function int divide(int x, int y) {
    	var int q, absX, absY;

		let absX = Math.abs(x);
		let absY = Math.abs(y);

		if (absY > absX) {
			return 0;
		}

		let q = Math.divide(absX, 2 * absY);
		if ((absX - (2 * q * absY)) < absY) {
			if ((x < 0 & y > 0) | (x > 0 & y < 0)) {
				let q = -q;
			}
			return 2 * q;
		} else {
			if ((x < 0 & y > 0) | (x > 0 & y < 0)) {
				let q = -q;
			}
			return (2 * q) + 1;
		}
    }

	function int sqrt(int x){
		var int y, j, temp, tempSquared;

		if (x < 0){
			do Sys.error(1);
			return 0;
		}

		let y  = 0;
		let j = 7;

		while (j > -1){
			let temp = y + twoPower[j];
			let tempSquared = temp * temp;
			if (~(tempSquared > x) & (tempSquared > 0)){
				let y = temp;
			}
			let j = j - 1;
		}

		return y;
	}

	function int max(int a, int b){
		if (a > b){
			return a;
		} else {
			return b;
		}
	}

	function int min(int a, int b){
		if (a < b){
			return a;
		} else {
			return b;
		}
	}
}